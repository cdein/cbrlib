# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Library cbrlib - main branch

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest --cov=cbrlib --cov-report term -s tests
    - uses: actions/checkout@v3
    - run: |
        poetry version patch
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Version bump to pubish to PyPi"
        git push
    - name: Publish to PyPi
      env:
        PYPI_SECRET: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry config pypi-token.pypi "$PYPI_SECRET"
        poetry publish --build
